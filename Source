#!/bin/bash

# Check if the domain is provided
if [ -z "$1" ]; then
  echo -e "\033[0;31m[!] Error: No domain provided.\033[0m"
  echo "Usage: ./subdomain_finder.sh <domain>"
  exit 1
fi

domain="$1"
output_file="subfinder.txt"

# Start the process
echo -e "\033[0;32m[+] Finding subdomains for: \033[0;31m$domain\033[0m"


# Run subfinder
echo -e "\033[0;32m[+] Running subfinder...\033[0m"
subfinder -d "$domain" 1> "$output_file" 2>/dev/null
if [ $? -ne 0 ]; then
  echo -e "\033[0;31m[!] Error: subfinder failed.\033[0m"
  exit 1
fi
# Run amass
echo -e "\033[0;32m[+] Running amass...\033[0m"
amass enum -passive -d "$domain" 1>> "$output_file" 2>/dev/null
if [ $? -ne 0 ]; then
  echo -e "\033[0;31m[!] Error: amass failed.\033[0m"
  exit 1
fi

# Run assetfinder
echo -e "\033[0;32m[+] Running assetfinder...\033[0m"
assetfinder --subs-only "$domain" 1>> "$output_file" 2>/dev/null
if [ $? -ne 0 ]; then
  echo -e "\033[0;31m[!] Error: assetfinder failed.\033[0m"
  exit 1
fi

# Sort and remove duplicates
echo -e "\033[0;32m[+] Sorting and removing duplicates...\033[0m"
sort -u "$output_file" -o "$output_file"
if [ $? -ne 0 ]; then
  echo -e "\033[0;31m[!] Error: Sorting failed.\033[0m"
  exit 1
fi

# Run httpx to check if the subdomains are alive
echo -e "\033[0;32m[+] Running httpx...\033[0m"
httpx -sc -probe -l "$output_file" -silent
if [ $? -ne 0 ]; then
  echo -e "\033[0;31m[!] Error: httpx failed.\033[0m"
  exit 1
fi

# Final message
echo -e "\033[0;32m[+] Alive domains saved to: \033[0;31m$output_file\033[0m"


                                                              55,1          Bot


                                                              40,0-1        59%

